import random

max_hobby_stage = 40
max_stag = 40


def persentage(text, start, finish):
    return text + str(random.randint(start, finish) * 10)


#    //////////////////////////////Функція для перевірки на піддавання чомусь стадії ////////////////////////////////////        #
def check_for_stage(exeption_array, random_ability, ability_name, ability_stages):
    random_ability_stage = ability_stages[random.randint(0, len(ability_stages) - 1)]
    switch = 0
    for i in exeption_array:
        if random_ability == i:
            print(ability_name + " = " + random_ability)
            switch = 1
            break
    if switch == 0:
        print(ability_name + " = " + random_ability + " " + random_ability_stage)
        return str(random_ability + " " + random_ability_stage)


class Body:
    def __init__(self):

        # //////////////////////////////////////Body///////////////////////////////////////////// #
        self.height = random.randint(155, 200)
        self.weight = random.randint(50, 110)
        imt = self.weight / (self.height / 100 * self.height / 100)
        if imt > 39:
            self.bodyType = "Ожиріння"
        elif imt >= 16:
            self.bodyType = "Міцне"
        else:
            self.bodyType = "Анарексія"
        self.body = "Телосложение: " + self.bodyType + ", Рост: " + str(self.height) + " cм" + ", Вес: " + str(
            self.weight) \
                    + " кг"


class Person:
    def __init__(self):
        self.job = ["Дієтолог", "Психолог", "Сексолог", "Будівельник", "Вчитель", "Військовий", "Пілот", "Митець",
                    "Президент", "Повар", "Бурильник", "Хакер", "Бариста", "Акушер", "БіоХімік",
                    "Кондитер", "Хірург", "Інженен", "Інструктор з виживання", "Бухгалтер", "Ландшафтний дизайнер",
                    "Режисер", "Ветеринар", "Матрос", "Водій", "Пожежник",
                    "Суддя", "Імунолог", "Вірусолог", "Священик", "Сажотрус", "Бізнесмен", "Вантажник",
                    "Касир", "Електрик", "Сантехнік", "Кібер-спортсмен", "Офіцер зв'язку",
                    "Флорист", "Сваха", "Співак", "Біо-фізик", "Фермер", "Мисливець", "Браконьєр",
                    "Агроном", "Історик", "Демонолог", "Парламентер", "Працівник ЖЕКа", "Банкір", "Дезінсектор"]

        # self.job = ["Диетолог", "Психолог", "Сексолог", "Строитель", "Учитель", "Военний", "Пилот", "Художник",
        #            "Татуировщик", "Президент", "Повар", "Бурильщик", "Хакер", "Бариста", "Акушер", "БиоХимик",
        #            "Кондитер", "Хирург", "Инжерен", "Инструктор по выживанию", "Бухгалтер", "Ландшафтный дизайнер",
        #            "Животновод", "Режисер", "Порноактер", "Ветеринар", "Матрос", "Водитель", "Космонавт", "Пожарник",
        #            "Судья", "Имунолог", "Вирусолог", "Священник", "Трубочист", "Колектор", "Бизнесмен", "Грузчик",
        #            "SMM менеджер", "Касир", "Електрик", "Сантехник", "Кибер-спортсмен", "Оператор набора текста",
        #            "Кутюрье", "Стеклодув", "Флорист", "Сваха", "Певец", "Био-физик", "Фермер", "Зоотехник",
        #            "Браконьер", "Агроном", "Историк", "Демонолог", "Переговорщик", "Роботник ЖЕКа", "Стример",
        #            "Банкир", "Дезинсектор"]

        # //////////////////////////////////////Health///////////////////////////////////////////// #
        self.health = ["Абсолютно здоровий", "Абсолютно здоровий", "Абсолютно здоровий", "Абсолютно здоровий",
                       "Абсолютно здоровий", "Абсолютно здоровий", "Абсолютно здоровий", "Абсолютно здоровий",
                       "Абсолютно здоровий", "Абсолютно здоровий", "Алергія на шерсть", "Безплідний", "Ампутована рука",
                       "Псоріаз", "Туберкульоз", "Біполярний розлад", "Альц Геймер", "Паралізовані нижні кінцівки",
                       "Цукровий діабет", "Алергія", "Астма", "Алкоголізм", "Тремор", "Дальтонізм",
                       "Анальгія(Нечутливість до болю)", "Безсоння", "Синдроом Турета", "Шизофренія", "Грижа",
                       "Синдром Мюнхаузена", "Вітрянка", "Епілепсія", "Дефект мовлення", "Непереносимість лактози",
                       ]

        # self.health = ["Совершенно здоров", "Совершенно здоров", "Совершенно здоров", "Совершенно здоров",
        #                   "Совершенно здоров", "Совершенно здоров", "Совершенно здоров", "Совершенно здоров",
        #                   "Совершенно здоров", "Алергия на шерсть", "Безплоден", "Ампутирована рука", "Слепота",
        #                   "Псориаз", "Туберкулез", "Биполярное розстройство", "Альц Геймер", "Парализован ниже пояса",
        #                   "Сахарный диабет", "Алергия", "Астма", "Алкоголизм", "Тремор", "Дальтонизм",
        #                   "Анальгия(Нечуствительность к боли)", "Безсонница", "Синтром Турета", "Шизофрения", "Грыжа",
        #                   "Синдром Мюнхаузена", "Ветрянка", "Епилепсия", "Дифект речи", "Непереносимость лактозы",
        #                   "Глухонемой"]

        self.no_health_stages = ["Абсолютно здоровий", "Безплідний", "Ампутована рука", "Біполярний розлад",
                                 "Паралізовані нижні кінцівки", "Непереносимість лактози", "Глухонімий"]

        # self.no_health_stages = ["Совершенно здоров", "Безплоден", "Ампутирована рука", "Слепота", "Биполярное"
        #                         " розстройство", "Парализован ниже пояса", "Отсутствие обоняния", "Непереносимость"
        #                         " лактозы", "Глухонемой"]

        print(len(self.health))

        self.health_stages = [" В ремісія", " 10%", " 20%", " 30%", " 40%", " 50%", " 60%", " 80%", " 100%",
                              " В ремісія", " 10%", " 20%", " 30%", " 40%", " 50%"]

        # self.health_stages = [" В ремисии", " 10%", " 20%", " 30%", " 40%", " 50%", " 60%", " 80%", " 100%",
        #                      " В ремисии", " 10%", " 20%", " 30%", " 40%", " 50%"]

        # //////////////////////////////////////Phobia///////////////////////////////////////////// #
        self.phobia = ["Без фобій", "Без фобій", "Без фобій", "Без фобій", "Без фобій", "Без фобій",
                       "Мусофобія (боязнь щурів)", "Венустрофобія (страх вродливих жінок)",
                       "Ергазіофобія (нав'язливий страх - страх вчинення будь-якого руху або дії)",
                       "Коулрофобія(страх клоунів)", "Інтернетфобія(страх інтернету)", "Арахнофобія(страх павуків)",
                       "Клаустрофобія( страх замкнутих приміщень", "Ортофобія(страх птахів та їхнього пір'я)",
                       "Кінофобія(страх псів)", "Гемофілія(страх крові)", "Некрофобія(страх трупів)",
                       "Демонофобія (страх демонів)", "Тетрофобія(страх перед числом 4-ри )",
                       "Спектрофобія(страх привидів)", "Аквафобія(страх води)", "Танатофобія(страх смерті)",
                       "Акустікофобія(страх голосних звуків)", "Акрофобія(страх висоти)",
                       "Аутофобія (страх залишатися на самоті)", "Без фобій", "Без фобій", "Без фобій", "Без фобій",
                       "Без фобій" "Без фобій", "Без фобій", "Без фобій", "Без фобій", "Без фобій", "Без фобій"]

        # self.phobia = ["Без фобий", "Без фобий", "Без фобий", "Без фобий", "Без фобий", "Без фобий",
        #               "Мусофобия(боязнь крыс)", "(Боязнь плателиновых мультиков)",
        #               "Венустрофобия (Страх красивых щенщин)", "Ергазиофобия (страх оперировать)",
        #               "Коулрофобия(Страх клоунов)", "Интернетофобия(Боязнь интернета)",
        #               "Арахнофобия(боязнь пауков)", "Клаустрофобия", "Ортофобия(Боязнь птиц и их оперения)",
        #               "Кинофобия(боязнь собак)", "Гемофобия(боязнь крови)", "Некрофобия(страх трупов и нежети)",
        #               "Фобофобия(Боязнь чужих фобий)", "Демонофобия (Боязнь демонов)", "Тетрофобия (Боязнь числа 4)",
        #               "Спектрофобия(Боязнь призраков)", "Аквафобия (Боязнь воды)", "Танатофобия (Боязнь смерти)",
        #               "Акустикофобия(Боязнь громких звуков)", "Боязнь шерсти", "Боязнь темноти",
        #               "Акрофобия(Боязнь высоты)", "Аутофобия (Боязнь оставаться наедине)", "Боязнь грязи",
        #               "Боязнь костей", "Без фобий", "Без фобий", "Без фобий", "Без фобий", "Без фобий"]

        print(len(self.phobia))

        # //////////////////////////////////////Hobby///////////////////////////////////////////// #

        self.hobby = ["Тваринництво", "Парусний спорт", "Рибалка", "Бадмінтон", "Кепмінг", "Футбол",
                      "Реставрація поверхонь", "Приготування їжі", "Фермерство", "Астрономія", "Радіо-зв'язок",
                      "Орігамі", "Стенд ап", "Хімія", "Розв'язування задач з фізики", "Перегляд фільмів",
                      "Орієнтування на місцевості", "Яой(це...хобі про японські мультики...", "Копрофілія", "Туризм",
                      "Шиття", "Стрільба", "Стрільба з лука", "Стрільба з арбалета", "Перегляд аниме", "Шопінг",
                      "Столярна справа", "Програмування", "Ковальська справа", "Металообробка", "Екібана",
                      "Збір квітів", "Волонтерство", "Колекціонування кросівок", "Колекціонування мінералів",
                      "Їзда на конях", "Перегляд серіалів", "Ремонт автомобілів", "Бітбокс",
                      "Таксидермія (створення чучел тварин)", "В'язання", "Плавання", "Приготування м'яса",
                      "Їзда на скейті", "Їзда на велосипеді", "Їзда на самокаті", "Мандри", "Малювання на тілі",
                      "Менеджмент речей", "Мисливство", "Каліграфія", "Карате", "Біг", "Рослинництво"]

        # self.hobby = ["Животноводство", "Парусний спорт", "Рибалка", "Бадминон", "Кепминг", "Футбол",
        #              "Реставрация поверхностей", "Готовка", "Фермерство", "Астрономия", "Радиосвязь", "Оригами",
        #              "Стенд ап", "Химия", "Решение задач по физике", "Очищение воды", "Просмотр фильмов",
        #              "Ориентирование на местности", "Яой", "Копрофилия", "Туризм", "Шитье", "Стрельба по мишеням",
        #              "Просмотр аниме", "Шопинг", "Столярное дело", "Програмирование", "Металооброботка",
        #              "Сбор цветов", "Волонтерство", "Колекционирование кросовок", "Езда на лошадях", "Видеомонтаж",
        #              "Рисование грязью", "Покупки на аукционах", "Просмотр Сериалов", "Ремонт машин", "Битбокс",
        #              "Таксидермия(Производство чучел животных)", "Вьязание", "Плаванье", "Готовка мьяса",
        #              "Езда на скейте", "Рисование на теле", "Менеджмент вещей", "Охота", "Стрельба с лука",
        #              "Калиграфия", "Карате", "Бег", "Овощеводство"]

        # //////////////////////////////////////item///////////////////////////////////////////// #
        self.item = ["Збірник 100 кращих фільмів", "Вудочка та спорядження для рибалки",
                     "Інкубатор и набор яєць для вирощування",
                     "Снайперська гвинтівка Драгунова калібру 7.62*59 мм та 150 патронів 1987 року випуску",
                     "Пістолет Макарова 9*18мм і 60 патронів",
                     "Автомат Калашникова Модифікований 7.52*39 мм та 300 патронів " "Набір ручних годинників",
                     "Покерний набір", "Аптечка першої допомоги", "Набір фельдшера", "Ноутбук", "5 кг кави",
                     "Грудна дитина", "Бінокль", "Генератор", "Каністра бензину", "Набір для малювання",
                     "Засіб для очищення води", "Засіб проти комах всіх видів", "Словник Даля",
                     "Біблія", "Гральні карти", "Самурайська катана", "Канцелярський ніж", "Палка", "20 літрів віскі",
                     "Собака", "Кіт", "Хом'як", "Попугай", "Велика енциклопедія гриника", "Червоний диплом",
                     "Зарядний пристрій всіх видів", "Набір масок та противогазів",
                     "Армійський сух.пайок ЗСУ 2020 року випуску, яка включає в себе:"
                     " сніданок з рисової каши та курятини, чай, цукор; обід грібний суп, чай, цукор; вечеря гречана"
                     " каша з свинним м'ясом, чай з цукром (40)", "Набір для шиття", "Набір столярних інструментів"]

        # self.item = ["Сборник 100 лутшых фильмов", "Удочка и снасти для рыбалки",
        #             "Инкубатор и набор яиц для выращивания", "Снайперская винтовка и 150 патронов",
        #             "Пистолет Макарова и 60 патронов", "Набор наручных часов", "Покерный набор",
        #             "Аптечка первой помощи", "Набор фельшера", "Ноутбук", "5 Кг Кофе", "Грудной ребенок",
        #             "Биноколь", "Генератор", "Канистра бензина", "Набор для рисования", "Средства для очистки воды",
        #             "Средства от насекомых всех видов", "Словарь Даля", "Библия", "Игральные карты",
        #             "Самурайский меч", "Набор семьян", "20 литров виски", "Собака", "Кошка", "Попугай",
        #             "Большая енциклопедия грибника", "Красный диплом", "Зарядные устройства всех типов",
        #             "Набор масок и распираторов", Полные пакеты еды", "Набор для шитья",
        #             "Набор столярных инструментов"]

        self.dopInfo = ["Знав президента", "Проходив курси психолога", "Переспав з порнозіркою",
                        "Проходив курси сексолога", "Воював в Сирії", "Обікрав діда"
                                                                      "Воював на Добасі в складі 503 батальйону морської піхоти",
                        "Обікрав банк, але не так епічно, як діда", "Отримав червоний диплом в 15 років",
                        "Можеш надати першу медичну допомогу", "Прочитав всі книги про 'Властелина колец'",
                        "Колишній військовослужбовець", "Може спати тиждень не просипаючись", "Переборов рак",
                        "Вірю в НЛО", "Виріс в сім'ї фермерів", "Прожив тибетському монастирі 5 років",
                        "Працював моделью в Victoria's Secret", "Шульга", "Знаю 8 мов",
                        "Чемпіон світу по 100 клітиночним шашкам", """Чемпіон світу по "Камінь ножниці бумага" """,
                        "Гравець КВН", """Чемпіон гри "Бункер" """, "Кидав курити 12 разів", "Працюю з 14 років",
                        "Знаю мову жестів", "Служив в мор.флоті на лінкорі Сагайдачний ", "Вегатаріанець",
                        "Націоналіст", "Побував у всіх країнах", "Отримав льотну ліцензію",
                        "Мій найкращий друг - Біл Гейтс", "Знаю всі тренди ТікТока", "Плутаю ліво, право, верх і низ"]

        # self.dopInfo = ["Знал президента", "Переспал(ла) с порнозвездой", "Проходил курси психолога",
        #                "Проходил курси сексолога", "Воевал в Сирии", "Обокрал деда", "Обокрал банк",
        #                "Получил красный диплом в 15 лет", "Могу оказать первую мед помощ",
        #                "Перечитал все книги о властелине колец", "Может спать неделю не просипаясь", "Переборол рак",
        #                "Верю в НЛО", "Вырос в семье фермеров", "Прожил в тебетском монастыре 5 лет",
        #                "Роботал моделью виктория сикрет", "Левша", "Знаю 8 языков",
        #                "Чемпион мира по 100 клеточным шашкам", "Бросал курить 12 раз", "Роботаю с 14 лет",
        #                "Служил в мор. флоте", "Вегатерианец", "Нацыоналист", "Побывал во всех странах",
        #                "Получил льотною лицензию", "Мой лутший друг - Бил Гейтс", "Знаю язык жестов",
        #                "Знаю все тренды тиктока", "Путаю лево,право,верх и низ"]

        self.humanTrait = ["Параноїк", "Зануда", "Конфліктний", "Наполегловий", "Життєрадісний", "Скучний",
                           "ЧСВ", "Чудовий", "Німфоманка", "Пацифіст", "Інтроверт", "Екстраверт", "Невротик",
                           "Довірливий", "Відвертий", "Меломан", "Альтруїст", "Ексгібіціоніст", "Кайфолом", "Підлий",
                           "Акуратний", "Стресостійкий", "Красномовний", "Ледачий", "Непосидючий", "Веселий",
                           "Корисний", "Нечупара", "Балакучий", "Кумедний", "Азартний", "Перфекціоніст", "Самолюб",
                           "Грайливий"]

        # self.humanTrait = ["Параноик", "Зануда", "Конфликтный", "Настойчивый", "Жизнерадосний", "Скучний",
        #                   "Понимающий", "ЧСВ", "Чудесен", "Нимфоманка", "Пацифист", "Интроверт", "Екстраверт",
        #                   "Невротик", "Доверчивый", "Откровенный", "Меломан", "Альтруист", "Ексгибиционист",
        #                   "Кайфолом", "Подлый", "Окуратный", "Стресоустойчивый", "Красноречивый", "Ленивый",
        #                   "Неусидчевый", "Веселий", "Неряха", "Корысный", "Болтливый", "Смешной", "Азартный",
        #                   "Перфекционист", "Самолюб", "Игривый"]

        self.humanTrait_stages = [" Слабовиражено", " Сильновиражено", " Середньовиражений"]

        # self.humanTrait_stages = [" Слабовыраженно", " Сильновыраженно", " Средневыраженно"]

        self.body = Body()
        self.height = self.body.height
        self.weight = self.body.weight
        self.bodyType = self.body.bodyType
        self.random_job = self.job[random.randint(0, len(self.job) - 1)]
        self.random_hobby = self.hobby[random.randint(0, len(self.hobby) - 1)]
        self.random_dop_info = self.dopInfo[random.randint(0, len(self.dopInfo) - 1)]
        self.random_human_trait = self.humanTrait[random.randint(0, len(self.humanTrait) - 1)]
        self.biological = "Чоловік"
        self.childFree = "Не чайлд фрі"
        self.random_health = "Абсолютно здоровий"
        self.random_phobia = "Без фобій"
        self.random_age = 0
        self.stag = 0
        self.age = 0
        self.random_hobby_stage = 0
        self.random_humanTrait_stage = 0

        self.create_character()

    def create_job(self):
        self.random_job = self.job[random.randint(0, len(self.job) - 1)]
        self.job.remove(self.random_job)
        return self.random_job

    def create_hobby(self):
        self.random_hobby = self.hobby[random.randint(0, len(self.hobby) - 1)]
        self.hobby.remove(self.random_hobby)

    def create_phobia(self):
        self.random_phobia = self.phobia[random.randint(0, len(self.phobia) - 1)]
        self.phobia.remove(self.random_phobia)

    def create_character(self):
        self.create_job()

        self.create_hobby()

        self.random_dop_info = self.dopInfo[random.randint(0, len(self.dopInfo) - 1)]
        self.dopInfo.remove(self.random_dop_info)

        self.random_human_trait = self.humanTrait[random.randint(0, len(self.humanTrait) - 1)]
        self.humanTrait.remove(self.random_human_trait)

        self.create_phobia()

        self.random_health = self.health[random.randint(0, len(self.health) - 1)]
        self.health.remove(self.random_health)

        # ///////bio////////    #
        if random.randint(0, 2) == 0:
            self.biological = "Чоловік"
        else:
            self.biological = "Жінка"

        if random.randint(0, 11) > 7:
            self.childFree = "Чайлд фрі"
        else:
            self.childFree = "Не чайлд фрі"

        self.body = Body()
        self.height = self.body.height
        self.weight = self.body.weight
        self.bodyType = self.body.bodyType

        self.random_age = random.randint(18, 80)
        self.stag = random.randint(0, self.random_age - 18)
        if self.stag > 40:
            self.stag = max_stag
        if self.random_age == 1:
            self.age = "Вік - " + str(self.random_age) + "рік"
        elif self.random_age <= 4:
            self.age = "Вік - " + str(self.random_age) + "роки"
        else:
            self.age = "Вік - " + str(self.random_age) + "років"
        self.random_hobby_stage = random.randint(0, self.random_age - 1)
        if self.random_hobby_stage > max_hobby_stage:
            self.random_hobby_stage = self.random_hobby_stage - max_hobby_stage

        self.random_humanTrait_stage = self.humanTrait_stages[random.randint(0, len(self.humanTrait_stages) - 1)]

        random_hobby = self.hobby[random.randint(0, len(self.hobby) - 1)]
        self.hobby.remove(random_hobby)

        print("\n" + "             Характеристики персонажа" + "\n")
        check_for_stage(self.no_health_stages, self.random_health, "Стан здоров'я", self.health_stages)
        print("Інформація про героя= " + str(self.age) + "  " + self.biological + "  " + self.childFree)
        print("Професія = " + self.random_job + ", стаж: " + str(self.stag))
        print("Додаткова інфорація = " + " " + self.random_dop_info)
        print("Фобія = " + self.random_phobia)
        print("Хобі = " + random_hobby + ", стаж: " + str(self.random_hobby_stage))
        print("Людська риса = " + self.random_human_trait + self.random_humanTrait_stage)
        print(self.body.body)


class Catastrophe:
    def __init__(self):
        self.population = persentage("Популяція людей складає - ", 5, 10) + " млн"

        # self.population = persentage("Популяция людей составляет - ", 8, 27) + " милионов"

        self.catastropheName = [
            # "Зомбі-апокалипсис",
            "Повстання машин",
            "Ядерна війна",
            # "Прихід Сатани на Землю",
        ]
        # "Колонізація Марса", "Земля захоплена мавпми, ходять чутки, що їхній лідер це Андрій Чалюк", "Пандемія",
        # "Пандемія мозгових черв'яків",  "Громадянська війна"]

        # self.catastropheName = ["Падение метеорита", "Всемирный потоп", "Зомби-апокалипсис", "Востание машин",
        #                        "Ядерная война", "Химическая война", "Нападения демонов", ]
        # "Колонизация марса", "Планета захвачена приматами", "Извержение вулканов", "Епидемия",
        # "Епидемия мозговых червей", "Вспышки на солнце", "Гражданская война"]

        self.catastrophe_name_random = self.catastropheName[random.randint(0, len(self.catastropheName) - 1)]

        self.description = {
            "Ядерна війна": persentage("23.10.2024 РФ перейшла кордон України з боку Атономної Республіки Крим."
                                       "В перші години війни війська РФ зуміли просунутися на материкову частину "
                                       "України (Херсонська обл міста Брилівка). ЗСУ зуміли зупинити ворога під "
                                       "містом Брилівка та перейти в контрнаступ відкинувши 18 мотострилецький "
                                       "батальйон РФ на напрямку Пристань-Крим. Паралельно з цим війська РФ пішла в "
                                       "наступ з боку Білорсії та Росії, непризнаних Донецької та Луганської"
                                       " Республіки. Українські військовслужбовці зазнаючи великих втрат залишають"
                                       " позицію за позицією. На російських новинах розповідають про перемоги армії"
                                       " агресора. Президент України( а хрін його знає, хто буде керувати країною в "
                                       "той час) благає про військову підтримку країн членів НАТО. Президенти Польщі,"
                                       " США та Франції висувають до України свої війська, саме в цей час відбувається"
                                       " переломна битва за столицю України. 10,28 та рештки 53 механізованої бригади "
                                       "були кинуті на захист Київа. Під командуванням 22 річного капітана (нажаль "
                                       "історія не зберігла його імені), якому було довіряно оборону Києва зуміла"
                                       " відкинути сили противника та перейти в контрнаступ. Через декілька днів ЗСУ з "
                                       "підтримкою країн членів НАТО зуміли звільнити всю територію незалежної України"
                                       " і перейти кордно з РФ. Через це Президент РФ В.В Хутін нанес ядерний удар по"
                                       " країнам членам НАТО. Не довго думаючи Президент США Тромб нанес ядерний удар у"
                                       " відповідь по РФ та її союзників...Саме таку передісторію має ця гра,"
                                       " інфраструктура знищена, невеликий процент населення зумів сховатися в"
                                       " бомбосховищах, зруйнованість місцевості - ", 4, 8) + " %.  Cпостерігаються" +
                            " проблеми з очищенням землі, води та її плодючістю, продовженням роду, та "
                            "забезпеченням їжі після виходу з бомбосховища, спостергіється"
                            " мутація розслин та тварин, зменшений об'єм сонячного світла, та зниження"
                            " температури. ",
            # ////////////////////////////// Новий сценарій////////////////////////////////////////// #
            # "Всемирный потоп": persentage("В последствие глобального потепления вся планета "
            # "покрыта водой, процент суши - ", 0, 2) + " %."
            # " Наблюдаються проблеми с очисткой воды, продолжением рода и обеспечением пищи после"
            # " выхода из бункера.",
            # ////////////////////////////// Новий сценарій////////////////////////////////////////// #
            "Зомбі-апокалепсис": persentage(
                "Богата та впливова корпорація  Umbrela, яка відома своїми винаходами в науковій та фармацептичній"
                " сфері була атакована терорестичним угрупуванням Center, один з вибухів розбив пробірку з вірусом, яка"
                " породила на цей світ нульового паціента. Руйнування - ", 5, 9) + "%. Люди після виходу матимуть"
                                                                                   " потребу в самозахисті, продовження роду та забезпечення себе їжею.",
            # ////////////////////////////// Новий сценарій////////////////////////////////////////// #
            "Повстання машин": persentage(" Двоє невдах програмістів (їхні інеціали можна було знайти в коді) написали"
                                          " бот, який вони в майбутньому назвали Скайнет, щоб помстится своєму"
                                          " університету за те, що їх було виключено, але бот потрапив в інтернет та"
                                          " отримав свідомість. Скайнет вийшов з-під контролю та, отримавши доступ до "
                                          "американської компанії, яка розробляє роботів зуміла відключити перше "
                                          "правило робототехніки - не нашкодити людям."
                                          " Через декілька днів почався тотальний геноцид людей, але деякі примітивні"
                                          " кожані мішки зуміли сховатися в бункери, називаючи їх своїм новими"
                                          " притулками. А на горі робот, якого всі кличуть Бандером Згиначем Родрігесом"
                                          " керує парадом, глобальний геноцид людського роду -  ", 6, 9) + "%. Люди"
                                                                                                           " після того, як сколотять примітивне угрупування, яке в майбутньому буде"
                                                                                                           " називатися MIRA, сподіватимуться на повернення Землі під свій контроль"
                                                                                                           " Жалю-гідні лю-диш-ки (роботське) ХА-ХА-ХА. Після створення MIRA люди мають "
                                                                                                           "відвоювати Землю, забезпечити себе їжею та водою, продовжити рід.",
            # ////////////////////////////// Новий сценарій////////////////////////////////////////// #
            "Хімічна війна": persentage("Будівельники в Казахстані неочікувано для себе зуміли відкопати запаси"
                                        " хімічної зброї, що було сховано на таємних складах СРСР та зробила заяву"
                                        " про цю знахідку на саміті ООН, але країна відмовилася їх просто так здавати,"
                                        " чим створила новий конфлікт на карті світу, після того, як американські"
                                        " специ провалили завдання по викраденню чи знешкодженню хімікатів, члени"
                                        " відомого на весь світ CENTER-угрупування завдяки однодумцям серед наукового"
                                        " персоналу зуміла заволодіти хімікатами і тим самим розпочинаючи нові війни"
                                        " по всій Землі, глобальна розруха -  ", 4, 7) + "%. Люди після виходу на"
                                                                                         " поверхність потребують в очищенні землі та води, знешкодження рештки"
                                                                                         " угрупування CENTER, відродження роду, а також захист від мутацій, які "
                                                                                         "спостергіються в деяких видах тварин та рослин."}

        # self.description = {"Падение метеорита": persentage("Ученые не смогли предотвратить падение метеорита"
        #                                                    ", инфраструктура нарушена, небольшой процент"
        #                                                    " населения успел спрятаться в бункери, "
        #                                                    "разрушения местности - ", 4, 8) + " %. Наблюдаються " +
        #                                         "проблеми с очисткой почвы и ее плодородностю, продолжением"
        #                                         " рода и обеспечением пищи после "
        #                                         "выхода из бункера и возобновлением инфраструктури.",
        #                    # ////////////////////////////// Новий сценарій////////////////////////////////////////// #
        #                    "Всемирный потоп": persentage("В последствие глобального потепления вся планета "
        #                                                  "покрыта водой, процент суши - ", 0, 2) + " %."
        #                    " Наблюдаються проблеми с очисткой воды, продолжением рода и обеспечением пищи после"
        #                    " выхода из бункера.",
        #                    # ////////////////////////////// Новий сценарій////////////////////////////////////////// #
        #                    "Зомби-апокалипсис": persentage("Богатая корпорация не удержала испытания вируса под"
        #                                                    " контролем и породила зомби епидемию, розрушения - ", 5,
        #                                                    9) +
        #                                         "% . Люди после выхода нуждаються в самозащите, "
        #                                         "продолжением рода и обеспечением себя пищей. ",
        #                    # ////////////////////////////// Новий сценарій////////////////////////////////////////// #
        #                    "Востание машин": persentage("Скайнет вышел из под контроля и роботы смогли отключить "
        #      "первое правило робототехники - не навреди человеку, люди успели спастись в аналоговых бункерах "
        #                                                 "глобальные розрушения -  ", 6, 9) + "% . Люди после выхода"
        #       " сильно нуждаются в защите человечества, обеспечении еди, продолжения рода, и возвращение земли.",
        #                    # ////////////////////////////// Новий сценарій////////////////////////////////////////// #
        #                    "Ядерная война": persentage(
        #                        "Политические разногласия привели к запуску боеголовок и тотальним"
        #                        " розрушениям, все страны поражены ядерными ракетами глобальные розрушения -  ", 6,
        #                        9) + "%"
        #        " Люди после выхода нуждаются в очистке почвы и воды, возрождении потомства, наблюдаются"
        #      " мутации растений и животных, уменьшение объема солнечного света, и понижение темперауры ",
        #                    # ////////////////////////////// Новий сценарій////////////////////////////////////////// #
        #                    "Химическая война": persentage(
        #                        "КазахНЕстан внезпно обнаружил запасы со времен СССР и заявил"
        #     " о них на саммите ООН, и отказался его сдавать, после неудачной операции по их изъятию,"
        #                        " формулы химикатов попали руки Алькаиды, глобальные розрушения -  ", 4, 7) + "%"
        #                " Люди после выхода нуждаются в химической очистке почвы и воды, возрождении потомства а"
        #                                    " так же в защите от мутацый, которые наблюдаются у животних и ростений.",
        #                    # ////////////////////////////// Новий сценарій////////////////////////////////////////// #
        #                    "Нападения демонов": persentage(" глобальные розрушения -  ", 4, 7) + "%"
        #            " Люди после выхода нуждаются в химической очистке почвы и воды, возрождении потомства а"
        #              " так же в защите от мутацый, которые наблюдаются у животних и ростений.",
        #                    }

        self.random_description = self.description[self.catastrophe_name_random]

        # print("\n" + "             Информация про катастрофу" + "\n")
        # print(catastrophe_name_random)
        # print(random_description)
        # print(self.population)


class Bunker:
    def __init__(self):
        self.inventory = ["Книги з будівництва", "Книга про медицину", "Книги про вірусологію", "Аптечка на 1 рік",
                          "Аптечка з літієм (для душевнохворих) на 1 рік", "Станція для очищення води", "Набір UNO",
                          "Набір настольних ігор", "Рації від фірми Motorolla",
                          "Аптечка першої допомоги 15 шт", "Запас вина на 3 місяці", "Набір столярних інструментів",
                          "Велика енциклопедія грибника", "Аптечка з літієм (для душевнохворих) на 4 місяці на 2 людини"
                          ]

        # self.inventory = ["Книги по строительству", "Книги по имунологии и врачебному делу",
        #                  "Аптечка с литием(для душевно больных) на 1 год", "Станцыя для очистки воды", " ",
        #                  "Набор настольных игр", "Любительская рация на 1 человека", "Аптечка первой помощи 5 штук",
        #                  "Аптечка первой помощи 10 штук", "Запас вина на на 3 месяца на всех учасников бункера",
        #                  "Аптечка с литием(для душевно больных) на 4 месяца на 2 человека",
        #                  "Набор столярных инструментов", "Большая енциклопедия грибника"]

        self.rooms = ["Кухня-їдальня", "Оборудована теплиця з набором насінням", "Склад зброї", "Кухня", "Майстерня",
                      "Спальне приміщення ", "Вбиральня-душева кімната"]

        # self.rooms = ["Кухня-столовая", "Оборудованая теплица с набором семьян", "Оборудованая теплица",
        #              "Компютерная комната", "Оружейная", "Кухня", "Мастерская", " ", " "]

        self.size = persentage("Розмір бункера = ", 5, 10) + "м2"

        # //////////Initiation ////////////////// #
        self.random_inventory = self.inventory[random.randint(0, len(self.inventory) - 1)]
        self.random_rooms = self.rooms[random.randint(0, len(self.rooms) - 1)]
        self.random_live_time = "Час проживання в бункері : " + str(random.randint(3, 36)) + " месяців"

        # print("\n" + "             Информация про бункер" + "\n")
        # print(random_live_time)
        # print("Инвентарь бункера: " + random_inventory)
        # print("Доступные комнати: " + random_rooms)
        # print(self.size)


class SpecialCards:
    def __init__(self, number_of_player):
        self.special_cards = ["Перероздача професий", "Отмена всех професий", "Перероздача сост. здоровя"
            , "Перероздача хобби", "Изменить професию", "Изменить сост. здоровя", "Изменить хобби"
            , "Раскрытие сост. здоровя", "Раскрытие характеристики", "Изличение от бесплодия",
                              "Изличение болезни", "Карта друга", "Карта врага", "Бункер с химиками (м)",
                              "Бункер с химиками (ж)", "Бункер с химиками", "Бункер куда я уйду", "Парк атракционов",
                              "Высоко в горах", "Заповедник", "Необитаемый остров", "Винный погреб", "Склад с оружием",
                              "Военная база", "Имунитет", "Имунитета для кого-то", "Доп голос",
                              "Кто-то использует карту",
                              "Обмен здоровьем", "Обмен багажом", "Обмен хобби", "Исключить игрока",
                              "+1 место в бункере",
                              "-1 место в бункере", "Новая професия", "Обмен фобией", "Карта брата/сестры",
                              "Карта отмены голоса",
                              ]
        self.random_card = self.special_cards[0]

        self.special_cards_description = {"Перероздача професий": "Все игроки получают новую професию из колоды",
                                          "Отмена всех професий": "Все професии больше не действительны",
                                          "Перероздача сост. здоровя":
                                              "Все игроки получают новое состояние здоровя из колоды",
                                          "Перероздача хобби": "Все игроки получают новое хобби из колоды",
                                          "Изменить професию": "Выбраный вами игрок получает новую професию из колоды",
                                          "Изменить сост. здоровя":
                                              "Выбраный вами игрок получает новое состояние здоровя из колоды ",
                                          "Изменить хобби": "Выбраный вами игрок получает новое хобби",
                                          "Раскрытие сост. здоровя": "Выбраный вами игрок раскрывает состояние здоровя",
                                          "Раскрытие характеристики":
                                              "Выбраный вами игрок раскрывает выбраную вами характеристику",
                                          "Изличение от бесплодия":
                                              "Вы или выбраный вами игрок излечивается от бесплодия",
                                          "Изличение болезни":
                                              "Вы или выбраный вами игрок излечивается от болезни которая не требует"
                                              " хирургического вмешательства",
                                          "Карта друга": "Игрок под номером " + str(random.randint(0, number_of_player))
                                                         + " ваш друг, вы не можете пройти в бункер без него",
                                          "Карта врага": "Игрок под номером " + str(random.randint(0, number_of_player))
                                                         + " ваш враг, вы не можете пройти в бункер с ним",
                                          "Бункер с химиками (м)":
                                              "Рядом с вами бункер с 2 совершенно здоровыми химиками мужчинами",
                                          "Бункер с химиками (ж)":
                                              "Рядом с вами бункер с 2 совершенно здоровыми химиками женщинами",
                                          "Бункер с химиками":
                                              "Рядом с вами дружеский бункер с 2 химиками",
                                          "Бункер куда я уйду":
                                              "Рядом с вами вражднебный бункер в который я пойду если не попаду к вам",
                                          "Парк атракционов":
                                              "Наш бункер на территории парка атракционов, розрушения парка - " +
                                              str(random.randint(4, 9) * 10) + "%",
                                          "Необитаемый остров": "Наш бункер находится на необитаемом острове",
                                          "Высоко в горах": "Наш бункер находится высоко в горахе",
                                          "Заповедник":
                                              "Наш бункер на территории заповедника, розрушения - " +
                                              str(random.randint(3, 9) * 10) + "%",
                                          "Винный погреб": "Я знаю где находится погреб с вином",
                                          "Склад с оружием": "Я знаю где находится склад с оружием",
                                          "Военная база":
                                              "Наш бункер на территории военной базы, розрушения - " +
                                              str(random.randint(4, 9) * 10) + "%",
                                          "Имунитет":
                                              "Карта позволяет дать себе или выбраному игроку имунитет"
                                              " на 1 игровой круг",
                                          "Имунитета для кого-то":
                                              "Карта позволяет другому игроку(не себе) имунитет на 1 игровой круг",
                                          "Доп голос": "Карта позволяет перероспределить голос выбраного игрока",
                                          "Обмен здоровьем":
                                              "Карта позволяет поменяься состоянием здоровя с выбраным игроком",
                                          "Обмен багажом": "Карта позволяет поменяься багажом с выбраным игроком",
                                          "Обмен хобби": "Карта позволяет поменяься хобби с выбраным игроком",
                                          "Исключить игрока":
                                              "Карта позволяет исключить выбраного игрока без голосования",
                                          "+1 место в бункере": "Места в бункере увеличились на 1",
                                          "-1 место в бункере": "Места в бункере уменьшились на 1",
                                          "Новая професия":
                                              "Ваша професия меняеться на новую из колоды"
                                              "(роботает даже при отмене професий)",
                                          "Обмен фобией": "Карта позволяет поменяься фобией с выбраным игроком",
                                          "Карта брата/сестры":
                                              "Игрок под номером " + str(random.randint(0, number_of_player)) +
                                              " ваш брат/сестра",
                                          "Карта отмены голоса": "Карта позволяет отменить голос выбраного игрока",
                                          "Кто-то использует карту":
                                              "Выбраный вами игрок использует выбраную вами карту",
                                          }

        self.random_special_cards_description = self.special_cards_description[self.random_card]

    def get_random_card(self):
        random_number = random.randint(0, len(self.special_cards) - 1)
        self.random_card = self.special_cards[random_number]
        self.random_special_cards_description = self.special_cards_description[self.random_card]
